LD 0 0
LD 0 1
LDF main
TAP 2
main: ; fun(world)
  LDC 0
  LDF GreedyStep
  CONS
  RTN
;end main

GreedyStep: ; fun(state, world)
  LD 0 0  ; state
  LD 0 1  ; world
  LD 0 1  ; world
  LDF lmState
  AP 1
  CDR
  CAR
  LD 0 1  ; world
  LDF map
  AP 1
  LDF mapHeight
  AP 1
  LD 0 1  ; world
  LDF map
  AP 1
  LDF mapWidth
  AP 1
  LDF InitVisited
  AP 2
  LDF InitQueueAndVisited
  AP 3
  LDF RecursiveFindGoal_2
  AP 1
  CAR
  CONS
  RTN
;end GreedyStep

RecursiveFindGoal_2: ; fun(queueAndVisitedAndWorld)
  LD 0 0  ; queueAndVisitedAndWorld
  CAR
  LD 0 0  ; queueAndVisitedAndWorld
  CDR
  CAR
  LD 0 0  ; queueAndVisitedAndWorld
  CDR
  CDR
  CAR
  LDF RecursiveFindGoal
  AP 3
  RTN
;end RecursiveFindGoal_2

RecursiveFindGoal: ; fun(queue, visited, world)
  LD 0 0  ; queue
  LDF queue_isempty
  AP 1
  SEL nonzero_5 zero_4
    LDC 0
    TSEL endif_6 endif_6
    nonzero_5:
      LDC 2
      LDC 0
      LDC 0
      CONS
      CONS
      JOIN
    zero_4:
      LD 0 0  ; queue
      LDF queue_peek
      AP 1
      LDC 0
      LDF ResultFromQueueElement
      AP 2
      LD 0 0  ; queue
      LDF queue_peek
      AP 1
      CAR
      LD 0 2  ; world
      LDF IsGoodPoint
      AP 2
      SEL nonzero_2 zero_1
        LDC 0
        TSEL endif_3 endif_3
        nonzero_2:
          LD 0 0  ; queue
          LDF queue_peek
          AP 1
          LDC 1
          LDF ResultFromQueueElement
          AP 2
          JOIN
        zero_1:
          LD 0 0  ; queue
          LDF queue_dequeue
          AP 1
          LD 0 0  ; queue
          LDF queue_peek
          AP 1
          LD 0 2  ; world
          LD 0 1  ; visited
          LDF AddNeighbours
          AP 4
          LDF RecursiveFindGoal_2
          AP 1
          JOIN
        endif_3:
      LDF GetBestResult
      AP 2
      JOIN
    endif_6:
  RTN
;end RecursiveFindGoal

InitQueueAndVisited: ; fun(world, lmPoint, visited)
  LDC 0
  LDC 0
  CONS
  LD 0 2  ; visited
  LD 0 0  ; world
  LDC 0
  CONS
  CONS
  CONS
  LDF AddNearestPointIntoQueue
  LD 0 1  ; lmPoint
  LDF NeighboursWithDirection
  AP 1
  LDF fold
  AP 3
  RTN
;end InitQueueAndVisited

AddNeighbours: ; fun(queue, pointAndDirection, world, visited)
  LD 0 0  ; queue
  LD 0 3  ; visited
  LD 0 2  ; world
  LDC 0
  CONS
  CONS
  CONS
  LDF AddPointIntoQueue
  LD 0 1  ; pointAndDirection
  CAR
  LD 0 1  ; pointAndDirection
  CDR
  CAR
  LD 0 1  ; pointAndDirection
  CDR
  CDR
  LDF Neighbours
  AP 3
  LDF fold
  AP 3
  RTN
;end AddNeighbours

AddPointIntoQueue: ; fun(queueAndVisitedAndWorld, pointAndDirection)
  LD 0 1  ; pointAndDirection
  CAR
  LD 0 0  ; queueAndVisitedAndWorld
  CDR
  CDR
  CAR
  LD 0 0  ; queueAndVisitedAndWorld
  CDR
  CAR
  LD 0 1  ; pointAndDirection
  CDR
  CDR
  LDF IsBadPoint
  AP 4
  SEL nonzero_17 zero_16
    LDC 0
    TSEL endif_18 endif_18
    nonzero_17:
      LD 0 0  ; queueAndVisitedAndWorld
      JOIN
    zero_16:
      LD 0 0  ; queueAndVisitedAndWorld
      CAR
      LD 0 1  ; pointAndDirection
      LDF queue_enqueue
      AP 2
      LD 0 0  ; queueAndVisitedAndWorld
      CDR
      CAR
      LD 0 1  ; pointAndDirection
      CAR
      LDC 1
      LDF setCell
      AP 3
      LD 0 0  ; queueAndVisitedAndWorld
      CDR
      CDR
      CAR
      LDC 0
      CONS
      CONS
      CONS
      JOIN
    endif_18:
  RTN
;end AddPointIntoQueue

IsBadPoint: ; fun(point, world, visited, depth)
  LD 0 3  ; depth
  LDC 10
  CGT
  SEL nonzero_23 zero_22
    LDC 0
    TSEL endif_24 endif_24
    nonzero_23:
      LDC 1
      JOIN
    zero_22:
      LD 0 1  ; world
      LDF map
      AP 1
      LD 0 0  ; point
      LDF getCell
      AP 2
      LD 0 1  ; world
      LD 0 2  ; visited
      LD 0 0  ; point
      LDF IsBadCell
      AP 4
      SEL nonzero_20 zero_19
        LDC 0
        TSEL endif_21 endif_21
        nonzero_20:
          LDC 1
          JOIN
        zero_19:
          LDC 0
          JOIN
        endif_21:
      JOIN
    endif_24:
  RTN
;end IsBadPoint

IsBadCell: ; fun(pointCell, world, visited, point)
  LD 0 2  ; visited
  LD 0 3  ; point
  LDF getCell
  AP 2
  LDC 1
  CEQ
  SEL nonzero_182 zero_181
    LDC 0
    TSEL endif_183 endif_183
    nonzero_182:
      LDC 1
      JOIN
    zero_181:
      LD 0 0  ; pointCell
      LDF pointIsWall
      AP 1
      SEL nonzero_179 zero_178
        LDC 0
        TSEL endif_180 endif_180
        nonzero_179:
          LDC 1
          JOIN
        zero_178:
          LDC 0
          JOIN
        endif_180:
      JOIN
    endif_183:
  RTN
;end IsBadCell

IsGoodPoint: ; fun(point, world)
  LD 0 1  ; world
  LDF map
  AP 1
  LD 0 0  ; point
  LDF getCell
  AP 2
  LD 0 1  ; world
  LD 0 0  ; point
  LDF IsGoodCell
  AP 3
  RTN
;end IsGoodPoint

IsGoodCell: ; fun(pointCell, world, point)
  LD 0 0  ; pointCell
  LDF pointIsPill
  AP 1
  SEL nonzero_44 zero_43
    LDC 0
    TSEL endif_45 endif_45
    nonzero_44:
      LDC 1
      JOIN
    zero_43:
      LD 0 0  ; pointCell
      LDF pointIsPowerPill
      AP 1
      SEL nonzero_41 zero_40
        LDC 0
        TSEL endif_42 endif_42
        nonzero_41:
          LDC 1
          JOIN
        zero_40:
          LD 0 0  ; pointCell
          LD 0 1  ; world
          LDF pointIsFruit_Time
          AP 2
          SEL nonzero_38 zero_37
            LDC 0
            TSEL endif_39 endif_39
            nonzero_38:
              LDC 1
              JOIN
            zero_37:
              LD 0 1  ; world
              LDF ghStates
              AP 1
              LD 0 2  ; point
              LDF any_frightGhostAtPoint
              AP 2
              SEL nonzero_35 zero_34
                LDC 0
                TSEL endif_36 endif_36
                nonzero_35:
                  LDC 1
                  JOIN
                zero_34:
                  LDC 0
                  JOIN
                endif_36:
              JOIN
            endif_39:
          JOIN
        endif_42:
      JOIN
    endif_45:
  RTN
;end IsGoodCell

NeighboursWithDirection: ; fun(point)
  LD 0 0  ; point
  LDC 0
  LDC -1
  CONS
  LDF sum
  AP 2
  LDC 0
  LDC 1
  CONS
  CONS
  LD 0 0  ; point
  LDC 1
  LDC 0
  CONS
  LDF sum
  AP 2
  LDC 1
  LDC 1
  CONS
  CONS
  LD 0 0  ; point
  LDC 0
  LDC 1
  CONS
  LDF sum
  AP 2
  LDC 2
  LDC 1
  CONS
  CONS
  LD 0 0  ; point
  LDC -1
  LDC 0
  CONS
  LDF sum
  AP 2
  LDC 3
  LDC 1
  CONS
  CONS
  LDC 0
  CONS
  CONS
  CONS
  CONS
  RTN
;end NeighboursWithDirection

Neighbours: ; fun(point, direction, depth)
  LD 0 0  ; point
  LDC 0
  LDC -1
  CONS
  LDF sum
  AP 2
  LD 0 1  ; direction
  LD 0 2  ; depth
  LDC 1
  ADD
  CONS
  CONS
  LD 0 0  ; point
  LDC 1
  LDC 0
  CONS
  LDF sum
  AP 2
  LD 0 1  ; direction
  LD 0 2  ; depth
  LDC 1
  ADD
  CONS
  CONS
  LD 0 0  ; point
  LDC 0
  LDC 1
  CONS
  LDF sum
  AP 2
  LD 0 1  ; direction
  LD 0 2  ; depth
  LDC 1
  ADD
  CONS
  CONS
  LD 0 0  ; point
  LDC -1
  LDC 0
  CONS
  LDF sum
  AP 2
  LD 0 1  ; direction
  LD 0 2  ; depth
  LDC 1
  ADD
  CONS
  CONS
  LDC 0
  CONS
  CONS
  CONS
  CONS
  RTN
;end Neighbours

pointIsWall: ; fun(pointCell)
  LD 0 0  ; pointCell
  LDC 0
  CEQ
  RTN
;end pointIsWall

pointIsPill: ; fun(pointCell)
  LD 0 0  ; pointCell
  LDC 2
  CEQ
  RTN
;end pointIsPill

pointIsPowerPill: ; fun(pointCell)
  LD 0 0  ; pointCell
  LDC 3
  CEQ
  RTN
;end pointIsPowerPill

pointIsFruit_Time: ; fun(pointCell, world)
  LD 0 0  ; pointCell
  LDC 4
  CEQ
  SEL nonzero_50 zero_49
    LDC 0
    TSEL endif_51 endif_51
    nonzero_50:
      LD 0 1  ; world
      LDF fruitExpired
      AP 1
      LDC 126
      CGT
      SEL nonzero_47 zero_46
        LDC 0
        TSEL endif_48 endif_48
        nonzero_47:
          LDC 1
          JOIN
        zero_46:
          LDC 0
          JOIN
        endif_48:
      JOIN
    zero_49:
      LDC 0
      JOIN
    endif_51:
  RTN
;end pointIsFruit_Time

InitVisited: ; fun(mapHeight, mapWidth)
  LD 0 0  ; mapHeight
  LD 0 1  ; mapWidth
  LDC 0
  LDF Repeat
  AP 2
  LDF Repeat
  AP 2
  RTN
;end InitVisited

Repeat: ; fun(max, value)
  LD 0 0  ; max
  SEL nonzero_53 zero_52
    LDC 0
    TSEL endif_54 endif_54
    nonzero_53:
      LD 0 1  ; value
      LD 0 0  ; max
      LDC 1
      SUB
      LD 0 1  ; value
      LDF Repeat
      AP 2
      CONS
      JOIN
    zero_52:
      LDC 0
      JOIN
    endif_54:
  RTN
;end Repeat

ResultFromQueueElement: ; fun(queueElement, isGood)
  LD 0 0  ; queueElement
  CDR
  CAR
  LD 0 1  ; isGood
  LD 0 0  ; queueElement
  CDR
  CDR
  CONS
  CONS
  RTN
;end ResultFromQueueElement

GetBestResult: ; fun(currentResult, resultCandidate)
  LD 0 0  ; currentResult
  CDR
  CAR
  SEL nonzero_14 zero_13
    LDC 0
    TSEL endif_15 endif_15
    nonzero_14:
      LD 0 0  ; currentResult
      JOIN
    zero_13:
      LD 0 1  ; resultCandidate
      CDR
      CAR
      SEL nonzero_11 zero_10
        LDC 0
        TSEL endif_12 endif_12
        nonzero_11:
          LD 0 1  ; resultCandidate
          JOIN
        zero_10:
          LD 0 0  ; currentResult
          CDR
          CDR
          LD 0 1  ; resultCandidate
          CDR
          CDR
          CGT
          SEL nonzero_8 zero_7
            LDC 0
            TSEL endif_9 endif_9
            nonzero_8:
              LD 0 0  ; currentResult
              JOIN
            zero_7:
              LD 0 1  ; resultCandidate
              JOIN
            endif_9:
          JOIN
        endif_12:
      JOIN
    endif_15:
  RTN
;end GetBestResult

AddNearestPointIntoQueue: ; fun(queueAndVisitedAndWorld, pointAndDirection)
  LD 0 1  ; pointAndDirection
  CAR
  LD 0 0  ; queueAndVisitedAndWorld
  CDR
  CDR
  CAR
  LD 0 0  ; queueAndVisitedAndWorld
  CDR
  CAR
  LDF IsBadNearestPoint
  AP 3
  SEL nonzero_155 zero_154
    LDC 0
    TSEL endif_156 endif_156
    nonzero_155:
      LD 0 0  ; queueAndVisitedAndWorld
      JOIN
    zero_154:
      LD 0 0  ; queueAndVisitedAndWorld
      CAR
      LD 0 1  ; pointAndDirection
      LDF queue_enqueue
      AP 2
      LD 0 0  ; queueAndVisitedAndWorld
      CDR
      CAR
      LD 0 1  ; pointAndDirection
      CAR
      LDC 1
      LDF setCell
      AP 3
      LD 0 0  ; queueAndVisitedAndWorld
      CDR
      CDR
      CAR
      LDC 0
      CONS
      CONS
      CONS
      JOIN
    endif_156:
  RTN
;end AddNearestPointIntoQueue

IsBadNearestPoint: ; fun(point, world, visited)
  LD 0 2  ; visited
  LD 0 0  ; point
  LDF getCell
  AP 2
  LDC 1
  CEQ
  SEL nonzero_176 zero_175
    LDC 0
    TSEL endif_177 endif_177
    nonzero_176:
      LDC 1
      JOIN
    zero_175:
      LD 0 1  ; world
      LDF map
      AP 1
      LD 0 0  ; point
      LDF getCell
      AP 2
      LDF pointIsWall
      AP 1
      SEL nonzero_173 zero_172
        LDC 0
        TSEL endif_174 endif_174
        nonzero_173:
          LDC 1
          JOIN
        zero_172:
          LD 0 1  ; world
          LDF ghStates
          AP 1
          LD 0 0  ; point
          LDF any_activeGhostAtPoint
          AP 2
          SEL nonzero_170 zero_169
            LDC 0
            TSEL endif_171 endif_171
            nonzero_170:
              LDC 1
              JOIN
            zero_169:
              LD 0 1  ; world
              LDF ghStates
              AP 1
              LD 0 0  ; point
              LDC 0
              LDC -1
              CONS
              LDF sum
              AP 2
              LDF any_activeGhostAtPoint
              AP 2
              SEL nonzero_167 zero_166
                LDC 0
                TSEL endif_168 endif_168
                nonzero_167:
                  LDC 1
                  JOIN
                zero_166:
                  LD 0 1  ; world
                  LDF ghStates
                  AP 1
                  LD 0 0  ; point
                  LDC 1
                  LDC 0
                  CONS
                  LDF sum
                  AP 2
                  LDF any_activeGhostAtPoint
                  AP 2
                  SEL nonzero_164 zero_163
                    LDC 0
                    TSEL endif_165 endif_165
                    nonzero_164:
                      LDC 1
                      JOIN
                    zero_163:
                      LD 0 1  ; world
                      LDF ghStates
                      AP 1
                      LD 0 0  ; point
                      LDC 0
                      LDC 1
                      CONS
                      LDF sum
                      AP 2
                      LDF any_activeGhostAtPoint
                      AP 2
                      SEL nonzero_161 zero_160
                        LDC 0
                        TSEL endif_162 endif_162
                        nonzero_161:
                          LDC 1
                          JOIN
                        zero_160:
                          LD 0 1  ; world
                          LDF ghStates
                          AP 1
                          LD 0 0  ; point
                          LDC -1
                          LDC 0
                          CONS
                          LDF sum
                          AP 2
                          LDF any_activeGhostAtPoint
                          AP 2
                          SEL nonzero_158 zero_157
                            LDC 0
                            TSEL endif_159 endif_159
                            nonzero_158:
                              LDC 1
                              JOIN
                            zero_157:
                              LDC 0
                              JOIN
                            endif_159:
                          JOIN
                        endif_162:
                      JOIN
                    endif_165:
                  JOIN
                endif_168:
              JOIN
            endif_171:
          JOIN
        endif_174:
      JOIN
    endif_177:
  RTN
;end IsBadNearestPoint

sum: ; fun(p1, p2)
  LD 0 0  ; p1
  CAR
  LD 0 1  ; p2
  CAR
  ADD
  LD 0 0  ; p1
  CDR
  LD 0 1  ; p2
  CDR
  ADD
  CONS
  RTN
;end sum

point: ; fun(x, y)
  LD 0 0  ; x
  LD 0 1  ; y
  CONS
  RTN
;end point

pEquals: ; fun(p1, p2)
  LD 0 0  ; p1
  CAR
  LD 0 1  ; p2
  CAR
  CEQ
  SEL nonzero_59 zero_58
    LDC 0
    TSEL endif_60 endif_60
    nonzero_59:
      LD 0 0  ; p1
      CDR
      LD 0 1  ; p2
      CDR
      CEQ
      SEL nonzero_56 zero_55
        LDC 0
        TSEL endif_57 endif_57
        nonzero_56:
          LDC 1
          JOIN
        zero_55:
          LDC 0
          JOIN
        endif_57:
      JOIN
    zero_58:
      LDC 0
      JOIN
    endif_60:
  RTN
;end pEquals

pdirections: ; fun()
  LDC 0
  LDC -1
  CONS
  LDC 1
  LDC 0
  CONS
  LDC 0
  LDC 1
  CONS
  LDC -1
  LDC 0
  CONS
  LDC 0
  CONS
  CONS
  CONS
  CONS
  RTN
;end pdirections

setCell: ; fun(map, point, value)
  LD 0 0  ; map
  LD 0 1  ; point
  CDR
  LD 0 0  ; map
  LD 0 1  ; point
  CDR
  LDF get
  AP 2
  LD 0 1  ; point
  CAR
  LD 0 2  ; value
  LDF set
  AP 3
  LDF set
  AP 3
  RTN
;end setCell

setCellXY: ; fun(map, x, y, value)
  LD 0 0  ; map
  LD 0 2  ; y
  LD 0 0  ; map
  LD 0 2  ; y
  LDF get
  AP 2
  LD 0 1  ; x
  LD 0 3  ; value
  LDF set
  AP 3
  LDF set
  AP 3
  RTN
;end setCellXY

mapHeight: ; fun(map)
  LD 0 0  ; map
  LDF getListLength
  AP 1
  RTN
;end mapHeight

mapWidth: ; fun(map)
  LD 0 0  ; map
  CAR
  LDF getListLength
  AP 1
  RTN
;end mapWidth

countPointsAs: ; fun(pList, point)
  LD 0 0  ; pList
  ATOM
  SEL nonzero_65 zero_64
    LDC 0
    TSEL endif_66 endif_66
    nonzero_65:
      LDC 0
      JOIN
    zero_64:
      LD 0 1  ; point
      LD 0 0  ; pList
      CAR
      LDF pEquals
      AP 2
      SEL nonzero_62 zero_61
        LDC 0
        TSEL endif_63 endif_63
        nonzero_62:
          LDC 1
          LD 0 0  ; pList
          CDR
          LD 0 1  ; point
          LDF countPointsAs
          AP 2
          ADD
          JOIN
        zero_61:
          LD 0 0  ; pList
          CDR
          LD 0 1  ; point
          LDF countPointsAs
          AP 2
          JOIN
        endif_63:
      JOIN
    endif_66:
  RTN
;end countPointsAs

get: ; fun(list, index)
  LD 0 1  ; index
  SEL nonzero_113 zero_112
    LDC 0
    TSEL endif_114 endif_114
    nonzero_113:
      LD 0 0  ; list
      CDR
      LD 0 1  ; index
      LDC 1
      SUB
      LDF get
      AP 2
      JOIN
    zero_112:
      LD 0 0  ; list
      CAR
      JOIN
    endif_114:
  RTN
;end get

set: ; fun(list, index, value)
  LD 0 1  ; index
  SEL nonzero_116 zero_115
    LDC 0
    TSEL endif_117 endif_117
    nonzero_116:
      LD 0 0  ; list
      CAR
      LD 0 0  ; list
      CDR
      LD 0 1  ; index
      LDC 1
      SUB
      LD 0 2  ; value
      LDF set
      AP 3
      CONS
      JOIN
    zero_115:
      LD 0 2  ; value
      LD 0 0  ; list
      CDR
      CONS
      JOIN
    endif_117:
  RTN
;end set

getListLength: ; fun(aList)
  LD 0 0  ; aList
  ATOM
  SEL nonzero_119 zero_118
    LDC 0
    TSEL endif_120 endif_120
    nonzero_119:
      LDC 0
      JOIN
    zero_118:
      LDC 1
      LD 0 0  ; aList
      CDR
      LDF getListLength
      AP 1
      ADD
      JOIN
    endif_120:
  RTN
;end getListLength

fold: ; fun(initElem, func, elemList)
  LD 0 2  ; elemList
  ATOM
  SEL nonzero_122 zero_121
    LDC 0
    TSEL endif_123 endif_123
    nonzero_122:
      LD 0 0  ; initElem
      JOIN
    zero_121:
      LD 0 0  ; initElem
      LD 0 2  ; elemList
      CAR
      LD 0 1  ; func
      AP 2
      LD 0 1  ; func
      LD 0 2  ; elemList
      CDR
      LDF fold
      AP 3
      JOIN
    endif_123:
  RTN
;end fold

any: ; fun(list, f)
  LD 0 0  ; list
  ATOM
  SEL nonzero_86 zero_85
    LDC 0
    TSEL endif_87 endif_87
    nonzero_86:
      LDC 0
      JOIN
    zero_85:
      LD 0 0  ; list
      CAR
      LD 0 1  ; f
      AP 1
      SEL nonzero_83 zero_82
        LDC 0
        TSEL endif_84 endif_84
        nonzero_83:
          LDC 1
          JOIN
        zero_82:
          LD 0 0  ; list
          CDR
          LD 0 1  ; f
          LDF any
          AP 2
          JOIN
        endif_84:
      JOIN
    endif_87:
  RTN
;end any

max: ; fun(list)
  LD 0 0  ; list
  LDC -2147483648
  LDF _max_iter
  AP 2
  RTN
  _max_iter: ; fun(list, maxValue)
    LD 0 0  ; list
    ATOM
    SEL nonzero_92 zero_91
      LDC 0
      TSEL endif_93 endif_93
      nonzero_92:
        LD 0 1  ; maxValue
        JOIN
      zero_91:
        LD 0 0  ; list
        CDR
        LD 0 0  ; list
        CAR
        LD 0 1  ; maxValue
        CGT
        SEL nonzero_89 zero_88
          LDC 0
          TSEL endif_90 endif_90
          nonzero_89:
            LD 0 0  ; list
            CAR
            JOIN
          zero_88:
            LD 0 1  ; maxValue
            JOIN
          endif_90:
        LDF _max_iter
        AP 2
        JOIN
      endif_93:
    RTN
  ;end _max_iter
  
  RTN
;end max

min: ; fun(list)
  LD 0 0  ; list
  LDC 2147483647
  LDF _min_iter
  AP 2
  RTN
  _min_iter: ; fun(list, minValue)
    LD 0 0  ; list
    ATOM
    SEL nonzero_110 zero_109
      LDC 0
      TSEL endif_111 endif_111
      nonzero_110:
        LD 0 1  ; minValue
        JOIN
      zero_109:
        LD 0 0  ; list
        CDR
        LD 0 1  ; minValue
        LD 0 0  ; list
        CAR
        CGT
        SEL nonzero_107 zero_106
          LDC 0
          TSEL endif_108 endif_108
          nonzero_107:
            LD 0 0  ; list
            CAR
            JOIN
          zero_106:
            LD 0 1  ; minValue
            JOIN
          endif_108:
        LDF _min_iter
        AP 2
        JOIN
      endif_111:
    RTN
  ;end _min_iter
  
  RTN
;end min

argmax: ; fun(list)
  LD 0 0  ; list
  LDC -1
  LDC -2147483648
  LDC 0
  LDF _argmax_iter
  AP 4
  RTN
  _argmax_iter: ; fun(list, maxIndex, maxValue, headIndex)
    LD 0 0  ; list
    ATOM
    SEL nonzero_98 zero_97
      LDC 0
      TSEL endif_99 endif_99
      nonzero_98:
        LD 0 1  ; maxIndex
        JOIN
      zero_97:
        LD 0 0  ; list
        CAR
        LD 0 2  ; maxValue
        CGT
        SEL nonzero_95 zero_94
          LDC 0
          TSEL endif_96 endif_96
          nonzero_95:
            LD 0 0  ; list
            CDR
            LD 0 3  ; headIndex
            LD 0 0  ; list
            CAR
            LD 0 3  ; headIndex
            LDC 1
            ADD
            LDF _argmax_iter
            AP 4
            JOIN
          zero_94:
            LD 0 0  ; list
            CDR
            LD 0 1  ; maxIndex
            LD 0 2  ; maxValue
            LD 0 3  ; headIndex
            LDC 1
            ADD
            LDF _argmax_iter
            AP 4
            JOIN
          endif_96:
        JOIN
      endif_99:
    RTN
  ;end _argmax_iter
  
  RTN
;end argmax

argmin: ; fun(list)
  LD 0 0  ; list
  LDC -1
  LDC 2147483647
  LDC 0
  LDF _argmin_iter
  AP 4
  RTN
  _argmin_iter: ; fun(list, minIndex, minValue, headIndex)
    LD 0 0  ; list
    ATOM
    SEL nonzero_104 zero_103
      LDC 0
      TSEL endif_105 endif_105
      nonzero_104:
        LD 0 1  ; minIndex
        JOIN
      zero_103:
        LD 0 2  ; minValue
        LD 0 0  ; list
        CAR
        CGT
        SEL nonzero_101 zero_100
          LDC 0
          TSEL endif_102 endif_102
          nonzero_101:
            LD 0 0  ; list
            CDR
            LD 0 3  ; headIndex
            LD 0 0  ; list
            CAR
            LD 0 3  ; headIndex
            LDC 1
            ADD
            LDF _argmin_iter
            AP 4
            JOIN
          zero_100:
            LD 0 0  ; list
            CDR
            LD 0 1  ; minIndex
            LD 0 2  ; minValue
            LD 0 3  ; headIndex
            LDC 1
            ADD
            LDF _argmin_iter
            AP 4
            JOIN
          endif_102:
        JOIN
      endif_105:
    RTN
  ;end _argmin_iter
  
  RTN
;end argmin

queue_enqueue: ; fun(q, value)
  LD 0 1  ; value
  LD 0 0  ; q
  CAR
  CONS
  LD 0 0  ; q
  CDR
  CONS
  RTN
;end queue_enqueue

queue_peek: ; fun(q)
  LD 0 0  ; q
  CDR
  ATOM
  SEL nonzero_68 zero_67
    LDC 0
    TSEL endif_69 endif_69
    nonzero_68:
      LD 0 0  ; q
      LDF queue_transfer
      AP 1
      LDF queue_peek
      AP 1
      JOIN
    zero_67:
      LD 0 0  ; q
      CDR
      CAR
      JOIN
    endif_69:
  RTN
;end queue_peek

queue_dequeue: ; fun(q)
  LD 0 0  ; q
  CDR
  ATOM
  SEL nonzero_71 zero_70
    LDC 0
    TSEL endif_72 endif_72
    nonzero_71:
      LD 0 0  ; q
      LDF queue_transfer
      AP 1
      LDF queue_dequeue
      AP 1
      JOIN
    zero_70:
      LD 0 0  ; q
      CAR
      LD 0 0  ; q
      CDR
      CDR
      CONS
      JOIN
    endif_72:
  RTN
;end queue_dequeue

queue_transfer: ; fun(q)
  LD 0 0  ; q
  CAR
  ATOM
  SEL nonzero_74 zero_73
    LDC 0
    TSEL endif_75 endif_75
    nonzero_74:
      LD 0 0  ; q
      JOIN
    zero_73:
      LD 0 0  ; q
      CAR
      CDR
      LD 0 0  ; q
      CAR
      CAR
      LD 0 0  ; q
      CDR
      CONS
      CONS
      LDF queue_transfer
      AP 1
      JOIN
    endif_75:
  RTN
;end queue_transfer

queue_isempty: ; fun(q)
  LD 0 0  ; q
  CAR
  ATOM
  SEL nonzero_80 zero_79
    LDC 0
    TSEL endif_81 endif_81
    nonzero_80:
      LD 0 0  ; q
      CDR
      ATOM
      SEL nonzero_77 zero_76
        LDC 0
        TSEL endif_78 endif_78
        nonzero_77:
          LDC 1
          JOIN
        zero_76:
          LDC 0
          JOIN
        endif_78:
      JOIN
    zero_79:
      LDC 0
      JOIN
    endif_81:
  RTN
;end queue_isempty

activeGhostAtPoint: ; fun(ghost, point)
  LD 0 0  ; ghost
  CAR
  LDC 0
  CEQ
  SEL nonzero_128 zero_127
    LDC 0
    TSEL endif_129 endif_129
    nonzero_128:
      LD 0 0  ; ghost
      CDR
      CAR
      LD 0 1  ; point
      LDF pEquals
      AP 2
      SEL nonzero_125 zero_124
        LDC 0
        TSEL endif_126 endif_126
        nonzero_125:
          LDC 1
          JOIN
        zero_124:
          LDC 0
          JOIN
        endif_126:
      JOIN
    zero_127:
      LDC 0
      JOIN
    endif_129:
  RTN
;end activeGhostAtPoint

frightGhostAtPoint: ; fun(ghost, point)
  LD 0 0  ; ghost
  CAR
  LDC 1
  CEQ
  SEL nonzero_134 zero_133
    LDC 0
    TSEL endif_135 endif_135
    nonzero_134:
      LD 0 0  ; ghost
      CDR
      CAR
      LD 0 1  ; point
      LDF pEquals
      AP 2
      SEL nonzero_131 zero_130
        LDC 0
        TSEL endif_132 endif_132
        nonzero_131:
          LDC 1
          JOIN
        zero_130:
          LDC 0
          JOIN
        endif_132:
      JOIN
    zero_133:
      LDC 0
      JOIN
    endif_135:
  RTN
;end frightGhostAtPoint

ghostAtPoint: ; fun(ghost, point)
  LD 0 0  ; ghost
  CDR
  CAR
  LD 0 1  ; point
  LDF pEquals
  AP 2
  RTN
;end ghostAtPoint

any_activeGhostAtPoint: ; fun(aList, arg1)
  LD 0 0  ; aList
  ATOM
  SEL nonzero_140 zero_139
    LDC 0
    TSEL endif_141 endif_141
    nonzero_140:
      LDC 0
      JOIN
    zero_139:
      LD 0 0  ; aList
      CAR
      LD 0 1  ; arg1
      LDF activeGhostAtPoint
      AP 2
      SEL nonzero_137 zero_136
        LDC 0
        TSEL endif_138 endif_138
        nonzero_137:
          LDC 1
          JOIN
        zero_136:
          LD 0 0  ; aList
          CDR
          LD 0 1  ; arg1
          LDF any_activeGhostAtPoint
          AP 2
          JOIN
        endif_138:
      JOIN
    endif_141:
  RTN
;end any_activeGhostAtPoint

any_frightGhostAtPoint: ; fun(aList, arg1)
  LD 0 0  ; aList
  ATOM
  SEL nonzero_146 zero_145
    LDC 0
    TSEL endif_147 endif_147
    nonzero_146:
      LDC 0
      JOIN
    zero_145:
      LD 0 0  ; aList
      CAR
      LD 0 1  ; arg1
      LDF frightGhostAtPoint
      AP 2
      SEL nonzero_143 zero_142
        LDC 0
        TSEL endif_144 endif_144
        nonzero_143:
          LDC 1
          JOIN
        zero_142:
          LD 0 0  ; aList
          CDR
          LD 0 1  ; arg1
          LDF any_frightGhostAtPoint
          AP 2
          JOIN
        endif_144:
      JOIN
    endif_147:
  RTN
;end any_frightGhostAtPoint

any_ghostAtPoint: ; fun(aList, arg1)
  LD 0 0  ; aList
  ATOM
  SEL nonzero_152 zero_151
    LDC 0
    TSEL endif_153 endif_153
    nonzero_152:
      LDC 0
      JOIN
    zero_151:
      LD 0 0  ; aList
      CAR
      LD 0 1  ; arg1
      LDF ghostAtPoint
      AP 2
      SEL nonzero_149 zero_148
        LDC 0
        TSEL endif_150 endif_150
        nonzero_149:
          LDC 1
          JOIN
        zero_148:
          LD 0 0  ; aList
          CDR
          LD 0 1  ; arg1
          LDF any_ghostAtPoint
          AP 2
          JOIN
        endif_150:
      JOIN
    endif_153:
  RTN
;end any_ghostAtPoint

map: ; fun(world)
  LD 0 0  ; world
  CAR
  RTN
;end map

lmState: ; fun(world)
  LD 0 0  ; world
  CDR
  CAR
  RTN
;end lmState

ghStates: ; fun(world)
  LD 0 0  ; world
  CDR
  CDR
  CAR
  RTN
;end ghStates

fruitExpired: ; fun(world)
  LD 0 0  ; world
  CDR
  CDR
  CDR
  RTN
;end fruitExpired

getCell: ; fun(map, point)
  LD 0 0  ; map
  LD 0 1  ; point
  CDR
  LDF get
  AP 2
  LD 0 1  ; point
  CAR
  LDF get
  AP 2
  RTN
;end getCell
