LD 0 0
LD 0 1
LDF main
TAP 2
main: ; fun(world)
  LDC 0
  LDF GreedyStep
  CONS
  RTN
;end main

GreedyStep: ; fun(state, world)
  LD 0 0  ; state
  LD 0 1  ; world
  LD 0 1  ; world
  LDF lmState
  AP 1
  CDR
  CAR
  LD 0 1  ; world
  LDF map
  AP 1
  LDF mapHeight
  AP 1
  LD 0 1  ; world
  LDF map
  AP 1
  LDF mapWidth
  AP 1
  LDF InitVisited
  AP 2
  LDF InitQueueAndVisited
  AP 3
  LDF RecursiveFindGoal_2
  AP 1
  CONS
  RTN
;end GreedyStep

RecursiveFindGoal_2: ; fun(queueAndVisitedAndWorld)
  LD 0 0  ; queueAndVisitedAndWorld
  CAR
  LD 0 0  ; queueAndVisitedAndWorld
  CDR
  CAR
  LD 0 0  ; queueAndVisitedAndWorld
  CDR
  CDR
  CAR
  LDF RecursiveFindGoal
  AP 3
  RTN
;end RecursiveFindGoal_2

RecursiveFindGoal: ; fun(queue, visited, world)
  LD 0 0  ; queue
  LDF queue_peek
  AP 1
  CAR
  LD 0 2  ; world
  LDF IsGoodCell
  AP 2
  SEL nonzero_23 zero_22
    LDC 0
    TSEL endif_24 endif_24
    nonzero_23:
      LD 0 0  ; queue
      LDF queue_peek
      AP 1
      CDR
      JOIN
    zero_22:
      LD 0 0  ; queue
      LDF queue_dequeue
      AP 1
      LD 0 0  ; queue
      LDF queue_peek
      AP 1
      LD 0 2  ; world
      LD 0 1  ; visited
      LDF AddNeighbours
      AP 4
      LDF RecursiveFindGoal_2
      AP 1
      JOIN
    endif_24:
  RTN
;end RecursiveFindGoal

InitQueueAndVisited: ; fun(world, lmPoint, visited)
  LDC 0
  LDC 0
  CONS
  LD 0 2  ; visited
  LD 0 0  ; world
  LDC 0
  CONS
  CONS
  CONS
  LDF AddPointIntoQueue
  LD 0 1  ; lmPoint
  LDF NeighboursWithDirection
  AP 1
  LDF fold
  AP 3
  RTN
;end InitQueueAndVisited

AddNeighbours: ; fun(queue, pointAndDirection, world, visited)
  LD 0 0  ; queue
  LD 0 3  ; visited
  LD 0 2  ; world
  LDC 0
  CONS
  CONS
  CONS
  LDF AddPointIntoQueue
  LD 0 1  ; pointAndDirection
  CAR
  LD 0 1  ; pointAndDirection
  CDR
  LDF Neighbours
  AP 2
  LDF fold
  AP 3
  RTN
;end AddNeighbours

AddPointIntoQueue: ; fun(queueAndVisitedAndWorld, pointAndDirection)
  LD 0 1  ; pointAndDirection
  CAR
  LD 0 0  ; queueAndVisitedAndWorld
  CDR
  CDR
  CAR
  LD 0 0  ; queueAndVisitedAndWorld
  CDR
  CAR
  LDF IsBadCell
  AP 3
  SEL nonzero_26 zero_25
    LDC 0
    TSEL endif_27 endif_27
    nonzero_26:
      LD 0 0  ; queueAndVisitedAndWorld
      JOIN
    zero_25:
      LD 0 0  ; queueAndVisitedAndWorld
      CAR
      LD 0 1  ; pointAndDirection
      LDF queue_enqueue
      AP 2
      LD 0 0  ; queueAndVisitedAndWorld
      CDR
      CAR
      LD 0 1  ; pointAndDirection
      CAR
      LDC 1
      LDF setCell
      AP 3
      LD 0 0  ; queueAndVisitedAndWorld
      CDR
      CDR
      CAR
      LDC 0
      CONS
      CONS
      CONS
      JOIN
    endif_27:
  RTN
;end AddPointIntoQueue

IsBadCell: ; fun(point, world, visited)
  LD 0 2  ; visited
  LD 0 0  ; point
  LDF getCell
  AP 2
  LDC 1
  CEQ
  SEL nonzero_35 zero_34
    LDC 0
    TSEL endif_36 endif_36
    nonzero_35:
      LDC 1
      JOIN
    zero_34:
      LD 0 0  ; point
      LD 0 1  ; world
      LDF map
      AP 1
      LDF pointIsWall
      AP 2
      SEL nonzero_32 zero_31
        LDC 0
        TSEL endif_33 endif_33
        nonzero_32:
          LDC 1
          JOIN
        zero_31:
          LD 0 1  ; world
          LDF ghStates
          AP 1
          LD 0 0  ; point
          LDF any_activeGhostAtPoint
          AP 2
          SEL nonzero_29 zero_28
            LDC 0
            TSEL endif_30 endif_30
            nonzero_29:
              LDC 1
              JOIN
            zero_28:
              LDC 0
              JOIN
            endif_30:
          JOIN
        endif_33:
      JOIN
    endif_36:
  RTN
;end IsBadCell

IsGoodCell: ; fun(point, world)
  LD 0 0  ; point
  LD 0 1  ; world
  LDF map
  AP 1
  LDF pointIsPill
  AP 2
  SEL nonzero_47 zero_46
    LDC 0
    TSEL endif_48 endif_48
    nonzero_47:
      LDC 1
      JOIN
    zero_46:
      LD 0 0  ; point
      LD 0 1  ; world
      LDF map
      AP 1
      LDF pointIsPowerPill
      AP 2
      SEL nonzero_44 zero_43
        LDC 0
        TSEL endif_45 endif_45
        nonzero_44:
          LDC 1
          JOIN
        zero_43:
          LD 0 0  ; point
          LD 0 1  ; world
          LDF pointIsFruit_Time
          AP 2
          SEL nonzero_41 zero_40
            LDC 0
            TSEL endif_42 endif_42
            nonzero_41:
              LDC 1
              JOIN
            zero_40:
              LD 0 1  ; world
              LDF ghStates
              AP 1
              LD 0 0  ; point
              LDF any_frightGhostAtPoint
              AP 2
              SEL nonzero_38 zero_37
                LDC 0
                TSEL endif_39 endif_39
                nonzero_38:
                  LDC 1
                  JOIN
                zero_37:
                  LDC 0
                  JOIN
                endif_39:
              JOIN
            endif_42:
          JOIN
        endif_45:
      JOIN
    endif_48:
  RTN
;end IsGoodCell

NeighboursWithDirection: ; fun(point)
  LD 0 0  ; point
  LDC 0
  LDC -1
  CONS
  LDF sum
  AP 2
  LDC 0
  CONS
  LD 0 0  ; point
  LDC 1
  LDC 0
  CONS
  LDF sum
  AP 2
  LDC 1
  CONS
  LD 0 0  ; point
  LDC 0
  LDC 1
  CONS
  LDF sum
  AP 2
  LDC 2
  CONS
  LD 0 0  ; point
  LDC -1
  LDC 0
  CONS
  LDF sum
  AP 2
  LDC 3
  CONS
  LDC 0
  CONS
  CONS
  CONS
  CONS
  RTN
;end NeighboursWithDirection

Neighbours: ; fun(point, direction)
  LD 0 0  ; point
  LDC 0
  LDC -1
  CONS
  LDF sum
  AP 2
  LD 0 1  ; direction
  CONS
  LD 0 0  ; point
  LDC 1
  LDC 0
  CONS
  LDF sum
  AP 2
  LD 0 1  ; direction
  CONS
  LD 0 0  ; point
  LDC 0
  LDC 1
  CONS
  LDF sum
  AP 2
  LD 0 1  ; direction
  CONS
  LD 0 0  ; point
  LDC -1
  LDC 0
  CONS
  LDF sum
  AP 2
  LD 0 1  ; direction
  CONS
  LDC 0
  CONS
  CONS
  CONS
  CONS
  RTN
;end Neighbours

pointIsWall: ; fun(point, map)
  LD 0 1  ; map
  LD 0 0  ; point
  LDF getCell
  AP 2
  LDC 0
  CEQ
  RTN
;end pointIsWall

pointIsPill: ; fun(point, map)
  LD 0 1  ; map
  LD 0 0  ; point
  LDF getCell
  AP 2
  LDC 2
  CEQ
  RTN
;end pointIsPill

pointIsPowerPill: ; fun(point, map)
  LD 0 1  ; map
  LD 0 0  ; point
  LDF getCell
  AP 2
  LDC 3
  CEQ
  RTN
;end pointIsPowerPill

pointIsFruit: ; fun(point, world)
  LD 0 1  ; world
  LDF map
  AP 1
  LD 0 0  ; point
  LDF getCell
  AP 2
  LDC 4
  CEQ
  RTN
;end pointIsFruit

pointIsFruit_Time: ; fun(point, world)
  LD 0 1  ; world
  LDF map
  AP 1
  LD 0 0  ; point
  LDF getCell
  AP 2
  LDC 4
  CEQ
  SEL nonzero_53 zero_52
    LDC 0
    TSEL endif_54 endif_54
    nonzero_53:
      LD 0 1  ; world
      LDF fruitExpired
      AP 1
      LDC 126
      CGT
      SEL nonzero_50 zero_49
        LDC 0
        TSEL endif_51 endif_51
        nonzero_50:
          LDC 1
          JOIN
        zero_49:
          LDC 0
          JOIN
        endif_51:
      JOIN
    zero_52:
      LDC 0
      JOIN
    endif_54:
  RTN
;end pointIsFruit_Time

InitVisited: ; fun(mapHeight, mapWidth)
  LD 0 0  ; mapHeight
  LD 0 1  ; mapWidth
  LDC 0
  LDF Repeat
  AP 2
  LDF Repeat
  AP 2
  RTN
;end InitVisited

Repeat: ; fun(max, value)
  LD 0 0  ; max
  SEL nonzero_56 zero_55
    LDC 0
    TSEL endif_57 endif_57
    nonzero_56:
      LD 0 1  ; value
      LD 0 0  ; max
      LDC 1
      SUB
      LD 0 1  ; value
      LDF Repeat
      AP 2
      CONS
      JOIN
    zero_55:
      LDC 0
      JOIN
    endif_57:
  RTN
;end Repeat

sum: ; fun(p1, p2)
  LD 0 0  ; p1
  CAR
  LD 0 1  ; p2
  CAR
  ADD
  LD 0 0  ; p1
  CDR
  LD 0 1  ; p2
  CDR
  ADD
  CONS
  RTN
;end sum

point: ; fun(x, y)
  LD 0 0  ; x
  LD 0 1  ; y
  CONS
  RTN
;end point

pEquals: ; fun(p1, p2)
  LD 0 0  ; p1
  CAR
  LD 0 1  ; p2
  CAR
  CEQ
  SEL nonzero_62 zero_61
    LDC 0
    TSEL endif_63 endif_63
    nonzero_62:
      LD 0 0  ; p1
      CDR
      LD 0 1  ; p2
      CDR
      CEQ
      SEL nonzero_59 zero_58
        LDC 0
        TSEL endif_60 endif_60
        nonzero_59:
          LDC 1
          JOIN
        zero_58:
          LDC 0
          JOIN
        endif_60:
      JOIN
    zero_61:
      LDC 0
      JOIN
    endif_63:
  RTN
;end pEquals

pdirections: ; fun()
  LDC 0
  LDC -1
  CONS
  LDC 1
  LDC 0
  CONS
  LDC 0
  LDC 1
  CONS
  LDC -1
  LDC 0
  CONS
  LDC 0
  CONS
  CONS
  CONS
  CONS
  RTN
;end pdirections

setCell: ; fun(map, point, value)
  LD 0 0  ; map
  LD 0 1  ; point
  CDR
  LD 0 0  ; map
  LD 0 1  ; point
  CDR
  LDF get
  AP 2
  LD 0 1  ; point
  CAR
  LD 0 2  ; value
  LDF set
  AP 3
  LDF set
  AP 3
  RTN
;end setCell

setCellXY: ; fun(map, x, y, value)
  LD 0 0  ; map
  LD 0 2  ; y
  LD 0 0  ; map
  LD 0 2  ; y
  LDF get
  AP 2
  LD 0 1  ; x
  LD 0 3  ; value
  LDF set
  AP 3
  LDF set
  AP 3
  RTN
;end setCellXY

mapHeight: ; fun(map)
  LD 0 0  ; map
  LDF getListLength
  AP 1
  RTN
;end mapHeight

mapWidth: ; fun(map)
  LD 0 0  ; map
  CAR
  LDF getListLength
  AP 1
  RTN
;end mapWidth

countPointsAs: ; fun(pList, point)
  LD 0 0  ; pList
  ATOM
  SEL nonzero_68 zero_67
    LDC 0
    TSEL endif_69 endif_69
    nonzero_68:
      LDC 0
      JOIN
    zero_67:
      LD 0 1  ; point
      LD 0 0  ; pList
      CAR
      LDF pEquals
      AP 2
      SEL nonzero_65 zero_64
        LDC 0
        TSEL endif_66 endif_66
        nonzero_65:
          LDC 1
          LD 0 0  ; pList
          CDR
          LD 0 1  ; point
          LDF countPointsAs
          AP 2
          ADD
          JOIN
        zero_64:
          LD 0 0  ; pList
          CDR
          LD 0 1  ; point
          LDF countPointsAs
          AP 2
          JOIN
        endif_66:
      JOIN
    endif_69:
  RTN
;end countPointsAs

get: ; fun(list, index)
  LD 0 1  ; index
  SEL nonzero_116 zero_115
    LDC 0
    TSEL endif_117 endif_117
    nonzero_116:
      LD 0 0  ; list
      CDR
      LD 0 1  ; index
      LDC 1
      SUB
      LDF get
      AP 2
      JOIN
    zero_115:
      LD 0 0  ; list
      CAR
      JOIN
    endif_117:
  RTN
;end get

set: ; fun(list, index, value)
  LD 0 1  ; index
  SEL nonzero_119 zero_118
    LDC 0
    TSEL endif_120 endif_120
    nonzero_119:
      LD 0 0  ; list
      CAR
      LD 0 0  ; list
      CDR
      LD 0 1  ; index
      LDC 1
      SUB
      LD 0 2  ; value
      LDF set
      AP 3
      CONS
      JOIN
    zero_118:
      LD 0 2  ; value
      LD 0 0  ; list
      CDR
      CONS
      JOIN
    endif_120:
  RTN
;end set

getListLength: ; fun(aList)
  LD 0 0  ; aList
  ATOM
  SEL nonzero_122 zero_121
    LDC 0
    TSEL endif_123 endif_123
    nonzero_122:
      LDC 0
      JOIN
    zero_121:
      LDC 1
      LD 0 0  ; aList
      CDR
      LDF getListLength
      AP 1
      ADD
      JOIN
    endif_123:
  RTN
;end getListLength

fold: ; fun(initElem, func, elemList)
  LD 0 2  ; elemList
  ATOM
  SEL nonzero_125 zero_124
    LDC 0
    TSEL endif_126 endif_126
    nonzero_125:
      LD 0 0  ; initElem
      JOIN
    zero_124:
      LD 0 0  ; initElem
      LD 0 2  ; elemList
      CAR
      LD 0 1  ; func
      AP 2
      LD 0 1  ; func
      LD 0 2  ; elemList
      CDR
      LDF fold
      AP 3
      JOIN
    endif_126:
  RTN
;end fold

any: ; fun(list, f)
  LD 0 0  ; list
  ATOM
  SEL nonzero_89 zero_88
    LDC 0
    TSEL endif_90 endif_90
    nonzero_89:
      LDC 0
      JOIN
    zero_88:
      LD 0 0  ; list
      CAR
      LD 0 1  ; f
      AP 1
      SEL nonzero_86 zero_85
        LDC 0
        TSEL endif_87 endif_87
        nonzero_86:
          LDC 1
          JOIN
        zero_85:
          LD 0 0  ; list
          CDR
          LD 0 1  ; f
          LDF any
          AP 2
          JOIN
        endif_87:
      JOIN
    endif_90:
  RTN
;end any

max: ; fun(list)
  LD 0 0  ; list
  LDC -2147483648
  LDF _max_iter
  AP 2
  RTN
  _max_iter: ; fun(list, maxValue)
    LD 0 0  ; list
    ATOM
    SEL nonzero_95 zero_94
      LDC 0
      TSEL endif_96 endif_96
      nonzero_95:
        LD 0 1  ; maxValue
        JOIN
      zero_94:
        LD 0 0  ; list
        CDR
        LD 0 0  ; list
        CAR
        LD 0 1  ; maxValue
        CGT
        SEL nonzero_92 zero_91
          LDC 0
          TSEL endif_93 endif_93
          nonzero_92:
            LD 0 0  ; list
            CAR
            JOIN
          zero_91:
            LD 0 1  ; maxValue
            JOIN
          endif_93:
        LDF _max_iter
        AP 2
        JOIN
      endif_96:
    RTN
  ;end _max_iter
  
  RTN
;end max

min: ; fun(list)
  LD 0 0  ; list
  LDC 2147483647
  LDF _min_iter
  AP 2
  RTN
  _min_iter: ; fun(list, minValue)
    LD 0 0  ; list
    ATOM
    SEL nonzero_113 zero_112
      LDC 0
      TSEL endif_114 endif_114
      nonzero_113:
        LD 0 1  ; minValue
        JOIN
      zero_112:
        LD 0 0  ; list
        CDR
        LD 0 1  ; minValue
        LD 0 0  ; list
        CAR
        CGT
        SEL nonzero_110 zero_109
          LDC 0
          TSEL endif_111 endif_111
          nonzero_110:
            LD 0 0  ; list
            CAR
            JOIN
          zero_109:
            LD 0 1  ; minValue
            JOIN
          endif_111:
        LDF _min_iter
        AP 2
        JOIN
      endif_114:
    RTN
  ;end _min_iter
  
  RTN
;end min

argmax: ; fun(list)
  LD 0 0  ; list
  LDC -1
  LDC -2147483648
  LDC 0
  LDF _argmax_iter
  AP 4
  RTN
  _argmax_iter: ; fun(list, maxIndex, maxValue, headIndex)
    LD 0 0  ; list
    ATOM
    SEL nonzero_101 zero_100
      LDC 0
      TSEL endif_102 endif_102
      nonzero_101:
        LD 0 1  ; maxIndex
        JOIN
      zero_100:
        LD 0 0  ; list
        CAR
        LD 0 2  ; maxValue
        CGT
        SEL nonzero_98 zero_97
          LDC 0
          TSEL endif_99 endif_99
          nonzero_98:
            LD 0 0  ; list
            CDR
            LD 0 3  ; headIndex
            LD 0 0  ; list
            CAR
            LD 0 3  ; headIndex
            LDC 1
            ADD
            LDF _argmax_iter
            AP 4
            JOIN
          zero_97:
            LD 0 0  ; list
            CDR
            LD 0 1  ; maxIndex
            LD 0 2  ; maxValue
            LD 0 3  ; headIndex
            LDC 1
            ADD
            LDF _argmax_iter
            AP 4
            JOIN
          endif_99:
        JOIN
      endif_102:
    RTN
  ;end _argmax_iter
  
  RTN
;end argmax

argmin: ; fun(list)
  LD 0 0  ; list
  LDC -1
  LDC 2147483647
  LDC 0
  LDF _argmin_iter
  AP 4
  RTN
  _argmin_iter: ; fun(list, minIndex, minValue, headIndex)
    LD 0 0  ; list
    ATOM
    SEL nonzero_107 zero_106
      LDC 0
      TSEL endif_108 endif_108
      nonzero_107:
        LD 0 1  ; minIndex
        JOIN
      zero_106:
        LD 0 2  ; minValue
        LD 0 0  ; list
        CAR
        CGT
        SEL nonzero_104 zero_103
          LDC 0
          TSEL endif_105 endif_105
          nonzero_104:
            LD 0 0  ; list
            CDR
            LD 0 3  ; headIndex
            LD 0 0  ; list
            CAR
            LD 0 3  ; headIndex
            LDC 1
            ADD
            LDF _argmin_iter
            AP 4
            JOIN
          zero_103:
            LD 0 0  ; list
            CDR
            LD 0 1  ; minIndex
            LD 0 2  ; minValue
            LD 0 3  ; headIndex
            LDC 1
            ADD
            LDF _argmin_iter
            AP 4
            JOIN
          endif_105:
        JOIN
      endif_108:
    RTN
  ;end _argmin_iter
  
  RTN
;end argmin

queue_enqueue: ; fun(q, value)
  LD 0 1  ; value
  LD 0 0  ; q
  CAR
  CONS
  LD 0 0  ; q
  CDR
  CONS
  RTN
;end queue_enqueue

queue_peek: ; fun(q)
  LD 0 0  ; q
  CDR
  ATOM
  SEL nonzero_71 zero_70
    LDC 0
    TSEL endif_72 endif_72
    nonzero_71:
      LD 0 0  ; q
      LDF queue_transfer
      AP 1
      LDF queue_peek
      AP 1
      JOIN
    zero_70:
      LD 0 0  ; q
      CDR
      CAR
      JOIN
    endif_72:
  RTN
;end queue_peek

queue_dequeue: ; fun(q)
  LD 0 0  ; q
  CDR
  ATOM
  SEL nonzero_74 zero_73
    LDC 0
    TSEL endif_75 endif_75
    nonzero_74:
      LD 0 0  ; q
      LDF queue_transfer
      AP 1
      LDF queue_dequeue
      AP 1
      JOIN
    zero_73:
      LD 0 0  ; q
      CAR
      LD 0 0  ; q
      CDR
      CDR
      CONS
      JOIN
    endif_75:
  RTN
;end queue_dequeue

queue_transfer: ; fun(q)
  LD 0 0  ; q
  CAR
  ATOM
  SEL nonzero_77 zero_76
    LDC 0
    TSEL endif_78 endif_78
    nonzero_77:
      LD 0 0  ; q
      JOIN
    zero_76:
      LD 0 0  ; q
      CAR
      CDR
      LD 0 0  ; q
      CAR
      CAR
      LD 0 0  ; q
      CDR
      CONS
      CONS
      LDF queue_transfer
      AP 1
      JOIN
    endif_78:
  RTN
;end queue_transfer

queue_isempty: ; fun(q)
  LD 0 0  ; q
  CAR
  ATOM
  SEL nonzero_83 zero_82
    LDC 0
    TSEL endif_84 endif_84
    nonzero_83:
      LD 0 0  ; q
      CDR
      ATOM
      SEL nonzero_80 zero_79
        LDC 0
        TSEL endif_81 endif_81
        nonzero_80:
          LDC 1
          JOIN
        zero_79:
          LDC 0
          JOIN
        endif_81:
      JOIN
    zero_82:
      LDC 0
      JOIN
    endif_84:
  RTN
;end queue_isempty

activeGhostAtPoint: ; fun(ghost, point)
  LD 0 0  ; ghost
  CAR
  LDC 0
  CEQ
  SEL nonzero_131 zero_130
    LDC 0
    TSEL endif_132 endif_132
    nonzero_131:
      LD 0 0  ; ghost
      CDR
      CAR
      LD 0 1  ; point
      LDF pEquals
      AP 2
      SEL nonzero_128 zero_127
        LDC 0
        TSEL endif_129 endif_129
        nonzero_128:
          LDC 1
          JOIN
        zero_127:
          LDC 0
          JOIN
        endif_129:
      JOIN
    zero_130:
      LDC 0
      JOIN
    endif_132:
  RTN
;end activeGhostAtPoint

frightGhostAtPoint: ; fun(ghost, point)
  LD 0 0  ; ghost
  CAR
  LDC 1
  CEQ
  SEL nonzero_137 zero_136
    LDC 0
    TSEL endif_138 endif_138
    nonzero_137:
      LD 0 0  ; ghost
      CDR
      CAR
      LD 0 1  ; point
      LDF pEquals
      AP 2
      SEL nonzero_134 zero_133
        LDC 0
        TSEL endif_135 endif_135
        nonzero_134:
          LDC 1
          JOIN
        zero_133:
          LDC 0
          JOIN
        endif_135:
      JOIN
    zero_136:
      LDC 0
      JOIN
    endif_138:
  RTN
;end frightGhostAtPoint

ghostAtPoint: ; fun(ghost, point)
  LD 0 0  ; ghost
  CDR
  CAR
  LD 0 1  ; point
  LDF pEquals
  AP 2
  RTN
;end ghostAtPoint

any_activeGhostAtPoint: ; fun(aList, arg1)
  LD 0 0  ; aList
  ATOM
  SEL nonzero_143 zero_142
    LDC 0
    TSEL endif_144 endif_144
    nonzero_143:
      LDC 0
      JOIN
    zero_142:
      LD 0 0  ; aList
      CAR
      LD 0 1  ; arg1
      LDF activeGhostAtPoint
      AP 2
      SEL nonzero_140 zero_139
        LDC 0
        TSEL endif_141 endif_141
        nonzero_140:
          LDC 1
          JOIN
        zero_139:
          LD 0 0  ; aList
          CDR
          LD 0 1  ; arg1
          LDF any_activeGhostAtPoint
          AP 2
          JOIN
        endif_141:
      JOIN
    endif_144:
  RTN
;end any_activeGhostAtPoint

any_frightGhostAtPoint: ; fun(aList, arg1)
  LD 0 0  ; aList
  ATOM
  SEL nonzero_149 zero_148
    LDC 0
    TSEL endif_150 endif_150
    nonzero_149:
      LDC 0
      JOIN
    zero_148:
      LD 0 0  ; aList
      CAR
      LD 0 1  ; arg1
      LDF frightGhostAtPoint
      AP 2
      SEL nonzero_146 zero_145
        LDC 0
        TSEL endif_147 endif_147
        nonzero_146:
          LDC 1
          JOIN
        zero_145:
          LD 0 0  ; aList
          CDR
          LD 0 1  ; arg1
          LDF any_frightGhostAtPoint
          AP 2
          JOIN
        endif_147:
      JOIN
    endif_150:
  RTN
;end any_frightGhostAtPoint

any_ghostAtPoint: ; fun(aList, arg1)
  LD 0 0  ; aList
  ATOM
  SEL nonzero_155 zero_154
    LDC 0
    TSEL endif_156 endif_156
    nonzero_155:
      LDC 0
      JOIN
    zero_154:
      LD 0 0  ; aList
      CAR
      LD 0 1  ; arg1
      LDF ghostAtPoint
      AP 2
      SEL nonzero_152 zero_151
        LDC 0
        TSEL endif_153 endif_153
        nonzero_152:
          LDC 1
          JOIN
        zero_151:
          LD 0 0  ; aList
          CDR
          LD 0 1  ; arg1
          LDF any_ghostAtPoint
          AP 2
          JOIN
        endif_153:
      JOIN
    endif_156:
  RTN
;end any_ghostAtPoint

map: ; fun(world)
  LD 0 0  ; world
  CAR
  RTN
;end map

lmState: ; fun(world)
  LD 0 0  ; world
  CDR
  CAR
  RTN
;end lmState

ghStates: ; fun(world)
  LD 0 0  ; world
  CDR
  CDR
  CAR
  RTN
;end ghStates

fruitExpired: ; fun(world)
  LD 0 0  ; world
  CDR
  CDR
  CDR
  RTN
;end fruitExpired

getCell: ; fun(map, point)
  LD 0 0  ; map
  LD 0 1  ; point
  CDR
  LDF get
  AP 2
  LD 0 1  ; point
  CAR
  LDF get
  AP 2
  RTN
;end getCell
